{
    "fullscreen.properties_panel.styles": {
        "string": "Styles"
    },
    "fullscreen.properties_panel.styles_description": {
        "string": "Use styles to combine multiple color fills. For single color values that respond to modes (e.g. light and dark), use color variables."
    },
    "variables.mode_pill.tooltip": {
        "string": "Modes: {listOfModes}"
    },
    "variables.variable_was_deleted": {
        "string": "Variable was deleted"
    },
    "variables.beta": {
        "string": "Beta"
    },
    "upsell.move_file_modes.upsell_title": {
        "string": "Need more variable modes?"
    },
    "upsell.move_file_modes.upsell_subtitle": {
        "string": "To create more than one variable mode, move this file from your drafts to a paid external team, or upload it to a team in another organization."
    },
    "upsell.move_file_prototyping.upsell_title": {
        "string": "Need advanced prototyping features?"
    },
    "upsell.move_file_prototyping.upsell_subtitle": {
        "string": "To use advanced prototyping features, move this file from your drafts to a paid team."
    },
    "proto.variable_debugger.live_preview_indicator": {
        "string": "Live preview"
    },
    "variables.type.string": {
        "string": "String"
    },
    "variables.type.boolean": {
        "string": "Boolean"
    },
    "variables.type.number": {
        "string": "Number"
    },
    "variables.type.color": {
        "string": "Color"
    },
    "variables.type.map": {
        "string": "Map"
    },
    "variables.type.symbolid": {
        "string": "Component"
    },
    "variables.type.font_style": {
        "string": "Font style"
    },
    "variables.type.text_data": {
        "string": "Text data"
    },
    "variables.authoring_modal.group_context_menu.ungroup": {
        "string": "Ungroup"
    },
    "variables.authoring_modal.group_context_menu.duplicate_groups": {
        "string": "Duplicate groups"
    },
    "variables.authoring_modal.group_context_menu.duplicate_group": {
        "string": "Duplicate group"
    },
    "variables.authoring_modal.group_context_menu.delete_groups": {
        "string": "Delete groups"
    },
    "variables.authoring_modal.group_context_menu.delete_group": {
        "string": "Delete group"
    },
    "variables.authoring_modal.context_menu.create_group": {
        "string": "New group with selection"
    },
    "variables.authoring_modal.context_menu.edit": {
        "string": "{count, plural, one {Edit variable} other {Edit variables}}"
    },
    "variables.authoring_modal.context_menu.duplicate": {
        "string": "{count, plural, one {Duplicate variable} other {Duplicate variables}}"
    },
    "variables.authoring_modal.context_menu.delete_multiple": {
        "string": "Delete variables"
    },
    "variables.authoring_modal.context_menu.delete": {
        "string": "Delete variable"
    },
    "variables.authoring_modal.context_menu.clear_alias": {
        "string": "Clear alias"
    },
    "variables.authoring_modal.context_menu.create_alias": {
        "string": "Create alias"
    },
    "variables.authoring_modal.create_variable_button_label": {
        "string": "Create variable button"
    },
    "variables.authoring_modal.table.create_variable": {
        "string": "Create variable"
    },
    "variables.type.string.default_value": {
        "string": "String value"
    },
    "variables.authoring_modal.default_collection_name": {
        "string": "Collection 1"
    },
    "variables.variable_collection_default_name": {
        "string": "Collection"
    },
    "variables.variable_collection_extension_default_name": {
        "string": "Extended collection"
    },
    "variables.authoring_modal.table.detach_alias": {
        "string": "Detach alias"
    },
    "variables.authoring_modal.table.all_variables": {
        "string": "All variables"
    },
    "variables.authoring_modal.overflow_dropdown.rename_collection": {
        "string": "Rename collection"
    },
    "variables.authoring_modal.overflow_dropdown.delete_collection": {
        "string": "Delete collection"
    },
    "variables.authoring_modal.overflow_dropdown.create_collection": {
        "string": "Create collection"
    },
    "variables.authoring_modal.overflow_dropdown.create_extended_collection": {
        "string": "Create extended collection"
    },
    "variables.authoring_modal.more_variable_set_options_tooltip": {
        "string": "More options"
    },
    "variables.authoring_modal.extended_collection.extension_based_off_library_tooltip": {
        "string": "Based off of {libraryName} / {collectionName}"
    },
    "variables.authoring_modal.extended_collection.missing_base_collection_name": {
        "string": "(missing collection)"
    },
    "variables.authoring_modal.extended_collection.extension_based_off_local_tooltip": {
        "string": "Based off of {collectionName}"
    },
    "variables.authoring_modal.reached_hard_mode_limit": {
        "string": "{modeLimit, plural, one {Limited to {modeLimit, number, integer} mode only} other {Limited to {modeLimit, number, integer} modes only}}"
    },
    "variables.authoring_modal.new_mode_tooltip": {
        "string": "New variable mode"
    },
    "variables.create_modal.value_label": {
        "string": "Value"
    },
    "variables.authoring_modal.mode_context_menu.duplicate_mode": {
        "string": "Duplicate mode"
    }
}